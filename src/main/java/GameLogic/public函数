可以调用的函数：
（假设实例化了一个game类并将其命名为 game1，你只需要实例化一个game就可以了，其他的我都在game里面实例好了）
其他的函数我会设置成private或者protected，防止误调用

game类：

game.init()
无参构造方法，无返回值，用于进行初始化。只要调用这个方法，该game的一切重来

game.nowPlay()
无参构造方法，返回当前正在行动的棋手

game.getChess(int x,int y)
获取坐标为（x，y）的棋

game.Click(Player player,int x,int y)
需要传入3个变量，每次点击都使用这个方法。返回值为int，具体意义见文件“Click 返回值”
点击时调用这个方法，player一般来说就是game.nowPlay()，x、y为点击的坐标
x只能是0 1 2 3 4 5 6 7中的一个，y只能是0 1 2 3中的一个。没有保护措施，一定不能超



Chess类:
先通过getChess()找到对应的棋子，再调用以下方法：

.isTurnOver()
返回布尔值，如果没翻面就是false

.getRank()  .getScore()  .getColor()  
获取相应的值，其中
rank为int类，只有1 2 3 4 5 6 7，分别表示兵，炮，马，车，象，士，将。除此之外没有其他任何表示他们的方法或变量
score为int类，表示他们各自占有的分数，用于计算棋手的得分，前端不一定用得上，但以防万一
color为Color类，对棋子来说只有Color.RED和Color.BLACK

.possibleMove(Chess[][] chess,int x,int y)
返回值为int[4][2],返回（x，y）处棋子的可能走法
其中可能有（-1，-1），为淘汰掉的可能

int[][] getDiedChess()
返回值为int[2][7],可以表示死去的棋子的种类及其个数
第一个[]代表死去棋子的颜色，0为RED，1为BLACK
第二个[]代表死去棋子的rank-1(因为rank是从1开始的而这个是从0开始的)
比如：diedChess[0][1]的值代表死掉红炮的个数



Player类：
先通过game.nowPlay()找到对应的棋手，再调用以下方法：
暂无


有其他需求就通过微信提出来
现在的代码只是勉强能运行，后续我会将部分代码封装好，上面的方法会全部设置成public，其他的不一定

应该会加一个获取每一步变化的方法，返回值暂定为int[][]

